plugins {
	id 'com.github.sherter.google-java-format' version '0.8'
}

apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'jacoco'

group = 'com.webank'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url 'https://dl.bintray.com/ethereum/maven/' }
}

googleJavaFormat {
	options style: 'AOSP'
	source = sourceSets*.allJava
	include '**/*.java'
	exclude '**/temp/*.java'
}

verifyGoogleJavaFormat {
	source = sourceSets*.allJava
	include '**/*.java'
	exclude '**/temp/*.java'
}

dependencies {
	compile 'org.apache.commons:commons-math3:3.6.1'
	compile 'org.codehaus.groovy:groovy-all:2.5.6'
	compile 'com.google.guava:guava:23.0'
	compile 'org.springframework.boot:spring-boot-starter-actuator:2.1.4.RELEASE'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.1.4.RELEASE'

	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE'
}

jar {
	destinationDir file('dist/apps')
	archiveName project.name + '.jar'
	exclude '**/*.xml'
	exclude '**/*.properties'
	exclude '**/*.yml'

	manifest {
		attributes(
				'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
				'Main-Class': 'com.webank.wecross.Application'
		)
	}

	doLast {
		copy {
			from file('src/main/resources/')
			into 'dist/conf'
		}
		copy {
			from configurations.runtime
			into 'dist/lib'
		}
		copy {
			from file('.').listFiles().findAll { File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env')) }
			into 'dist'
		}
	}
}

test {
	testLogging.showStandardStreams = true
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}
