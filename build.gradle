plugins {
    id 'com.github.sherter.google-java-format' version '0.8'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'jacoco'

group = 'com.webank'
sourceCompatibility = '1.8'
version = '1.0.0-rc4-06170-SNAPSHOT'
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

javadoc {
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
    }
}

repositories {
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://dl.bintray.com/ethereum/maven/' }
}

googleJavaFormat {
    options style: 'AOSP'
    source = sourceSets*.allJava
    include '**/*.java'
    exclude '**/temp/*.java'
}

verifyGoogleJavaFormat {
    source = sourceSets*.allJava
    include '**/*.java'
    exclude '**/temp/*.java'
}

configurations.all {
    exclude module: "spring-boot-starter-logging"
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

dependencies {
    compile 'com.moandjiezana.toml:toml4j:0.7.2'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.13.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-log4j2:2.1.13.RELEASE'
    compile 'org.asynchttpclient:async-http-client:2.12.0'
    compile 'io.netty:netty-buffer:4.1.47.Final'
    compile 'io.netty:netty-handler:4.1.47.Final'
    compile 'com.google.guava:guava:28.1-jre'
    compile 'junit:junit:4.12'
}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.toml'
    exclude '**/*.properties'
    exclude '**/*.yml'
    exclude '**/*.crt'
    exclude '**/*.key'

    manifest {
        attributes(
                'Main-Class': 'com.webank.wecrosssdk.TestMain',
                'version': project.version,
        )
    }

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('.').listFiles().findAll { File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env')) }
            into 'dist'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.webank'
            artifactId = 'wecross-java-sdk'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            // https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPublication.html
            pom {
                name = "WeCross-Java-SDK"
                description = "Java SDK for WeCross"
                url = "https://github.com/WeBankFinTech/WeCross-Java-SDK"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "Shareong"
                        name = "Shareong"
                        email = "740310627@qq.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/WeBankFinTech/WeCross-Java-SDK.git"
                    developerConnection = "scm:git:ssh://github.com/WeBankFinTech/WeCross-Java-SDK.git"
                    url = "https://github.com/WeBankFinTech/WeCross-Java-SDK"
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            //*
            def NEXUS_USERNAME = ''
            def NEXUS_PASSWORD = ''
            //*/
            credentials {
                username = NEXUS_USERNAME
                password = NEXUS_PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

test {
    testLogging.showStandardStreams = true
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
